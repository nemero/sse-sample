version: '3'
services:
    nginx:
        #image: nginx:alpine
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        container_name: nginx
        ports:
            - "${APP_PORT:-8080}:80"
        volumes:
            - ./app/:/var/www/html
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - social-nginx-log:/var/log/nginx/

    app:
        container_name: app
        build:
            context: ./docker/php
            dockerfile: Dockerfile
            args:
                UID: ${UID}
                GID: ${GID}
        working_dir: /var/www/html
        #command: [ "php", "index.php" ]
        volumes:
            - ./app/:/var/www/html
        depends_on:
            - pgsql

    pgsql:
        image: 'postgres:15'
        container_name: pgsql
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE:-app}'
            POSTGRES_USER: '${DB_USERNAME:-app}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'social-db-pgsql:/var/lib/postgresql/data'
            - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE:-app}", "-U", "${DB_USERNAME:-app}" ]
            retries: 3
            timeout: 5s

    adminer:
        image: adminer
        container_name: adminer
        ports:
            - '8081:8080'

volumes:
    social-db-pgsql:
    social-nginx-log:
